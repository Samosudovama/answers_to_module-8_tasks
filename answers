// Задание 8.7.1
// Создайте функцию printInfo, которая будет выводить информацию о человеке в формате
//  "Name: <имя>, Age: <возраст>". Создайте объект person с двумя свойствами: name и age. 
//  Используйте метод call, чтобы вызвать функцию printInfo от имени объекта person.

let person = { name: "Sheldon", age: 29 };
function printInfo(name, age){
    console.log(` Name: ${this.name}, Age: ${this.age}`);
}

console.log(printInfo.call(person));



// Задание 8.7.2
// Создайте функцию calculate, которая будет принимать три параметра: a, b и operator.
// Функция должна производить математическую операцию между a и b в зависимости от 
// значения operator (может быть "+", "-", "*" или "/") и возвращать результат операции. 
// Используйте метод apply, чтобы вызвать функцию calculate с передачей объекта со значениями a, b и operator
// в качестве первого аргумента
// и массива с тремя значениями [2, 3, "+"] в качестве второго аргумента.

function calculate( a, b, operator){
    if( operator ==  " + "  ){ return a + b; }
    else if( operator == " - " ){ return a - b; }
    else if( operator == " / "){ return a / b; }
    else if( operator == " * " ){ return a * b; }
};

const numbers = [ 2, 3, " + "];

const obj = {
    a: 0,
    b: 0,
    operator: "",
};

let resultOfCalculate = calculate.apply( obj, numbers );
alert( resultOfCalculate);


// Задание 8.7.3
// Есть массив объектов, представляющих собой пользователей, каждый из которых имеет свойство age (возраст).
// Создайте новый массив, содержащий только тех пользователей, чей возраст больше или равен 18.
// Затем создайте новый массив, содержащий только свойства name (имя) каждого пользователя.

const users = [
    { name: "Sheldon", age: 17 },
    { name: "Emy", age: 30 },
    { name: "Leonard", age: 28 },
];

const filteredUsers = users.filter((elem) => {
    return elem.age >= 18;
});

console.log ( filteredUsers );


// Задание 8.7.4
// Создайте функцию setFullName, которая будет устанавливать свойство fullName у переданного ей объекта. 
// Используйте метод bind, чтобы создать новую функцию setPersonFullName, которая будет устанавливать 
// fullName для объекта person из предыдущего примера. Вызовите setPersonFullName с параметром "John Smith"
// и убедитесь, что свойство fullName объекта person было изменено соответствующим образом.

function setFullName( fullName ){      
     this.fullName = fullName ;
};

const person = {
        name: 'Sheldon',
        age: 29,
    };

const setPersonFullName = setFullName.bind(person);

setPersonFullName( "John Smith" );
console.log( person);


// Задание 8.7.5
// Напишите функцию, которая принимает массив чисел и возвращает
// новый массив, содержащий только уникальные числа, отсортированные в порядке возрастания.


const sds = [34, 26, 88, 12, 26, 135, 675, 34, 30, 12];

function uniqueNumbers(numbers) {
  return new Set(numbers.sort((a, b) => a - b));
}

console.log(uniqueNumbers(sds));
